plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/com.h2database/h2
    runtimeOnly group: 'com.h2database', name: 'h2', version: '2.2.224'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.1'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.2.0'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // Spring Cloud Config 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

    // SpringBoot Actuator 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring cloud bus-amqp 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // feign client 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // resilience4j circuitbreaker 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // zipkin, sleuth - spring boot3 지원 중단 -> micrometer 흡수
//    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
//    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // zipkin + micrometer 의존성 추가 -> 분산 추적 시스템 (spring actuator 도 추가해야 한다 - 상단에 추가하였으므로 생략)
    implementation 'io.micrometer:micrometer-observation'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.github.openfeign:feign-micrometer'

    // 모니터링을 위한 micrometer-registry-prometheus 의존성 추가
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
